# Reshifr Hash Index
# NMake

CL = cl
LINK = link

FLAGS = /Ox /W4
RHI_FLAGS = /DRHI_PRIME
TEST_FLAGS = /std:c++17 /EHsc

RHI_DIR = ..\src
TEST_DIR = .
BUILD_DIR = build

INCLUDES = /I$(RHI_DIR)
LIBS =
TARGET = main.exe

RHI_HEADERS = \
	$(RHI_DIR)\rhi.h

TEST_HEADERS = \
	$(TEST_DIR)\utils.hpp

HEADERS = $(RHI_HEADERS) $(TEST_HEADERS)

OBJS = \
	$(BUILD_DIR)\rhi.obj \
	$(BUILD_DIR)\main.obj \
	$(BUILD_DIR)\set\init.obj \
	$(BUILD_DIR)\set\reserve.obj \
	$(BUILD_DIR)\set\insert.obj

all: build $(OBJS) $(TARGET)
	$(TARGET)

build:
	@mkdir $(BUILD_DIR)\set $(BUILD_DIR)\map 2> nul || ver > nul

clean:
	@del /f /s /q $(TARGET) 1> nul 2> nul || ver > nul
	@rmdir /s /q $(BUILD_DIR) 1> nul 2> nul || ver > nul

# Compile the source on src
#
$(BUILD_DIR)\rhi.obj: $(RHI_DIR)\rhi.c $(RHI_HEADERS)
	$(CL) /c $(RHI_DIR)\rhi.c /Fo:$@ $(FLAGS) $(RHI_FLAGS) $(INCLUDES)

# Compile the source on tests
#
$(BUILD_DIR)\main.obj: $(TEST_DIR)\main.cpp $(HEADERS)
	$(CL) /c $(TEST_DIR)\main.cpp /Fo:$@ $(FLAGS) $(TEST_FLAGS) $(INCLUDES)

# Compile the source on tests\set
#
$(BUILD_DIR)\set\init.obj: $(TEST_DIR)\set\init.cpp $(HEADERS)
	$(CL) /c $(TEST_DIR)\set\init.cpp /Fo:$@ $(FLAGS) $(TEST_FLAGS) $(INCLUDES)

$(BUILD_DIR)\set\reserve.obj: $(TEST_DIR)\set\reserve.cpp $(HEADERS)
	$(CL) /c $(TEST_DIR)\set\reserve.cpp /Fo:$@ $(FLAGS) $(TEST_FLAGS) $(INCLUDES)

$(BUILD_DIR)\set\insert.obj: $(TEST_DIR)\set\insert.cpp $(HEADERS)
	$(CL) /c $(TEST_DIR)\set\insert.cpp /Fo:$@ $(FLAGS) $(TEST_FLAGS) $(INCLUDES)

# Create executable
#
$(TARGET): $(OBJS)
	$(LINK) $(OBJS) /OUT:$(TARGET)
